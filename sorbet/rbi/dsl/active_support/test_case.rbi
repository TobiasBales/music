# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ActiveSupport::TestCase`.
# Please instead update this file by running `bin/tapioca dsl ActiveSupport::TestCase`.

class ActiveSupport::TestCase
  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def active_storage_attachments(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def active_storage_blobs(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def authors(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def course_permissions(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def courses(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def enrollments(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def exercises(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def instruments(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def profiles(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def tabs(*fixture_names); end

  sig { params(fixture_names: T.any(String, Symbol)).returns(T.untyped) }
  def users(*fixture_names); end
end
