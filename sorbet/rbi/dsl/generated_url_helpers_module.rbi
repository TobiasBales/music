# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def courses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_exercise_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_identity_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_identity_email_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_identity_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_active_storage_attachment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_active_storage_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_active_storage_variant_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_author_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_course_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_email_verification_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_instrument_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_password_reset_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_madmin_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enrollments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exercise_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exercise_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exercises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def identity_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def identity_email_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def identity_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_attachment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_attachments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_blobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_variant_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_active_storage_variant_records_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_author_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_authors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_course_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_course_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_courses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_email_verification_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_email_verification_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_enrollments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_exercises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_instrument_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_instruments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_password_reset_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_password_reset_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_profiles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_tabs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def madmin_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_exercise_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_identity_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_active_storage_attachment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_active_storage_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_active_storage_variant_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_author_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_course_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_course_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_email_verification_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_enrollment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_exercise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_instrument_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_password_reset_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_madmin_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_component_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_components_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_in_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tabs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end
end
